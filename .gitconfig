## Authentication #############################################################

[user]
    name = Eric Bailey
    email = eric.w.bailey@gmail.com

[github]
    user = ericwbailey
    token = TOKEN




## Core #######################################################################

[core]
    # Use custom `.gitignore`
    excludesfile = ~/.gitignore

    # Treat spaces before tabs and all kinds of trailing whitespace as an error
    # [default] trailing-space: looks for spaces at the end of a line
    # [default] space-before-tab: looks for spaces before tabs at the beginning of a line
    whitespace = space-before-tab,-indent-with-non-tab,trailing-space

    # Make `git rebase` safer on OS X. More info: http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/
    trustctime = false

    # Prevent showing files whose names contain non-ASCII symbols as unversioned: http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
    precomposeunicode = false

    # http://stackoverflow.com/questions/136178/git-diff-handling-long-lines
    pager = less -r




## Aliases ####################################################################

[alias]
    # View available aliases: https://twitter.com/HugoGiraudel/status/724939458940919808
    aliases = config --get-regexp alias

    # View abbreviated SHA, description, and history graph of the latest 20 commits
    l = log --pretty=oneline -n 20 --graph --abbrev-commit

    # View the current working tree status using the short format
    s = status -s

    # Show the diff between the latest commit and the current state
    d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

    # Pull in remote changes for the current repository and all its submodules
    p = !"git pull; git submodule foreach git pull origin master"

    # Clone a repository including all submodules
    c = clone --recursive

    # Commit all changes
    ca = !git add -A && git commit -av

    # Switch to a branch, creating it if necessary
    go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

    # Checkout
    co = checkout
    cob = checkout -b

    # Show verbose output about tags, branches or remotes
    t = tag -l
    b = branch -a
    r = remote -v

    # List aliases
    la = "!git config -l | grep alias | cut -c 7-"

    # List contributors with number of commits
    contributors = shortlog --summary --numbered

    # Human git aliases: http://gggritso.com/human-git-aliases
    branches = branch -a
    tags = tag
    stashes = stash list
    unstage = reset -q HEAD --
    discard = checkout --
    uncommit = reset --mixed HEAD~
    amend = commit --amend
    nevermind = !git reset --hard HEAD && git clean -d -f



## General ####################################################################

[apply]
    # Detect whitespace errors when applying a patch
    whitespace = fix

[diff]
    # Detect copies as well as renames
    renames = copies
    tool = Kaleidoscope

[help]
    # Automatically correct and execute mistyped commands
    autocorrect = 1

[merge]
    # Include summaries of merged commits in newly created merge commit messages
    log = true
    tool = Kaleidoscope

[push]
    # Use the Git 1.x.x default to avoid errors on machines with old Git installations. To use `simple` instead, add this to your `~/.extra` file: `git config --global push.default simple`. See http://git.io/mMah-w.
    default = matching




## Color ######################################################################

[color]
    # Use colors in Git commands that are capable of colored output when outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
    ui = auto
    interactive = auto

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold    # Line info
    old = red              # Deletions
    new = green            # Additions

[color "status"]
    added = yellow
    changed = green
    untracked = cyan




## URLs #######################################################################

[url "git@github.com:"]
    insteadOf = "gh:"
    pushInsteadOf = "github:"
    pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
    insteadOf = "github:"

[url "git@gist.github.com:"]
    insteadOf = "gst:"
    pushInsteadOf = "gist:"
    pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
    insteadOf = "gist:"

[url "https://bitbucket.org/"]
    insteadOf = bb:




## Tools ######################################################################

[mergetool]
    keepBackup = true
    prompt = false

[mergetool "Kaleidoscope"]
    cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
    trustexitcode = true

[difftool "Kaleidoscope"]
    cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"

[difftool]
    prompt = false
